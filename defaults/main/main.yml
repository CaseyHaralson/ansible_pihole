---
###############################################################################
# Pi-Hole Role Configuration
###############################################################################
# DB configuration is optional. DB updates are applied then gravity update is
# run to ensure database ID's are consistent. Apply before UI changes are made
# to ensure consistency.
#
# Exact configuration state may be exported/imported with teleporter. this
# provides a pre-configured deployement for Pi-Hole service.
#
# Configuration contains basic setup and domain blocking lists. Lists can be
# set via Group Management -> Adlists; and updated via Tools -> Update Gravity.
#
# If running multiple instances; be sure changes are applied to both.

# Target location of backup file on ansible host.
pihole_local_backup: 'group_vars/pihole/data/pihole-teleporter.tar.gz'

# Use pi-hole CLI for all possible DB modifications instead of direct edits.
# Default: False.
pihole_use_cli: false

# Apply any pihole updates during configuration? Otherwise updates must be done
# via the GUI or CLI. Default: False.
pihole_update_enable: false

# Disable role behavior change warnings. Default: True.
pihole_disable_warning: true

# Enable idempotent pihole operation. Default: False.
# The default behavior before this option existed is the equivalent of 'false'.
#
# Idempotent operation will:
# * Clears all pihole databases and rebuilds them to prevent 'skew'.
# * Service **WILL** be interrupted while role is being applied (use multiple
#   pihole instances or disable this).
# * All adlists will be redownloaded.
# * Existing logging/client information will be lost.
#
# Long running pihole instances with large volume of changes to clients/groups
# may see 'skew' between what exists on the pihole server and what the role
# defines. This corrects the issue at the expense of service downtime and
# rebuilding.
pihole_idempotent: false

###############################################################################
# Pi-Hole setupVars.conf
###############################################################################

pihole_blocking_enabled:   true
pihole_admin_email:        ''
pihole_webui_boxed_layout: 'boxed'
pihole_webtheme:           'default-dark'
# A random password will be set if empty.
pihole_webpassword:           ''
pihole_dnsmasq_listening:     'single'
pihole_dns_fqdn_required:     false
pihole_dns_bogus_priv:        false
pihole_dnssec:                false
pihole_rev_server:            false
pihole_rev_server_cidr:       "{{ ansible_default_ipv4.address | ansible.utils.ipaddr('network/prefix') }}"
pihole_rev_server_target:     '{{ ansible_default_ipv4.gateway }}'
pihole_rev_server_domain:     'lan'
pihole_pihole_interface:      '{{ ansible_default_ipv4.interface }}'
pihole_ipv4_address:          "{{ (ansible_default_ipv4.address + '/' + ansible_default_ipv4.netmask) | ansible.utils.ipaddr('address/prefix') }}"
pihole_ipv6_address:          ''
pihole_dhcp_active:           false
pihole_dhcp_start:            "{{ (ansible_default_ipv4.address + '/' + ansible_default_ipv4.netmask) | ansible.utils.nthhost(200) }}"
pihole_dhcp_end:              "{{ (ansible_default_ipv4.address + '/' + ansible_default_ipv4.netmask) | ansible.utils.nthhost(-5) }}"
pihole_dhcp_router:           '{{ ansible_default_ipv4.gateway }}'
pihole_dhcp_leasetime:        24
pihole_pihole_domain:         'lan'
pihole_dhcp_ipv6:             false
pihole_dhcp_rapid_commit:     false
pihole_pihole_dns_1:          "{{ ansible_dns.nameservers | ansible.utils.ipv4() | first | default('1.1.1.1') }}#53"
pihole_pihole_dns_2:          ''
pihole_query_logging:         true
pihole_install_web_server:    true
pihole_install_web_interface: true
pihole_lighttpd_enabled:      true
pihole_cache_size:            10000
